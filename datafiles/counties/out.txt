"aitkin": lambda: read_file("datafiles/counties/aitkin", True),
"anoka": lambda: read_file("datafiles/counties/anoka", True),
"becker": lambda: read_file("datafiles/counties/becker", True),
"beltrami": lambda: read_file("datafiles/counties/beltrami", True),
"benton": lambda: read_file("datafiles/counties/benton", True),
"big-stone": lambda: read_file("datafiles/counties/big-stone", True),
"blue-earth": lambda: read_file("datafiles/counties/blue-earth", True),
"brown": lambda: read_file("datafiles/counties/brown", True),
"carlton": lambda: read_file("datafiles/counties/carlton", True),
"carver": lambda: read_file("datafiles/counties/carver", True),
"cass": lambda: read_file("datafiles/counties/cass", True),
"chippewa": lambda: read_file("datafiles/counties/chippewa", True),
"chisago": lambda: read_file("datafiles/counties/chisago", True),
"clay": lambda: read_file("datafiles/counties/clay", True),
"clearwater": lambda: read_file("datafiles/counties/clearwater", True),
"cook": lambda: read_file("datafiles/counties/cook", True),
"cottonwood": lambda: read_file("datafiles/counties/cottonwood", True),
"crow-wing": lambda: read_file("datafiles/counties/crow-wing", True),
"dakota": lambda: read_file("datafiles/counties/dakota", True),
"dodge": lambda: read_file("datafiles/counties/dodge", True),
"douglas": lambda: read_file("datafiles/counties/douglas", True),
"faribault": lambda: read_file("datafiles/counties/faribault", True),
"fillmore": lambda: read_file("datafiles/counties/fillmore", True),
"freeborn": lambda: read_file("datafiles/counties/freeborn", True),
"goodhue": lambda: read_file("datafiles/counties/goodhue", True),
"grant": lambda: read_file("datafiles/counties/grant", True),
"hennepin": lambda: read_file("datafiles/counties/hennepin", True),
"houston": lambda: read_file("datafiles/counties/houston", True),
"hubbard": lambda: read_file("datafiles/counties/hubbard", True),
"isanti": lambda: read_file("datafiles/counties/isanti", True),
"itasca": lambda: read_file("datafiles/counties/itasca", True),
"jackson": lambda: read_file("datafiles/counties/jackson", True),
"kanabec": lambda: read_file("datafiles/counties/kanabec", True),
"kandiyohi": lambda: read_file("datafiles/counties/kandiyohi", True),
"kittson": lambda: read_file("datafiles/counties/kittson", True),
"koochiching": lambda: read_file("datafiles/counties/koochiching", True),
"lac-qui-parle": lambda: read_file("datafiles/counties/lac-qui-parle", True),
"lake": lambda: read_file("datafiles/counties/lake", True),
"lake-of-the-woods": lambda: read_file("datafiles/counties/lake-of-the-woods", True),
"le-sueur": lambda: read_file("datafiles/counties/le-sueur", True),
"lincoln": lambda: read_file("datafiles/counties/lincoln", True),
"lyon": lambda: read_file("datafiles/counties/lyon", True),
"mahnomen": lambda: read_file("datafiles/counties/mahnomen", True),
"marshall": lambda: read_file("datafiles/counties/marshall", True),
"martin": lambda: read_file("datafiles/counties/martin", True),
"mcleod": lambda: read_file("datafiles/counties/mcleod", True),
"meeker": lambda: read_file("datafiles/counties/meeker", True),
"mille-lacs": lambda: read_file("datafiles/counties/mille-lacs", True),
"morrison": lambda: read_file("datafiles/counties/morrison", True),
"mower": lambda: read_file("datafiles/counties/mower", True),
"murray": lambda: read_file("datafiles/counties/murray", True),
"nicollet": lambda: read_file("datafiles/counties/nicollet", True),
"nobles": lambda: read_file("datafiles/counties/nobles", True),
"norman": lambda: read_file("datafiles/counties/norman", True),
"olmsted": lambda: read_file("datafiles/counties/olmsted", True),
"otter-tail": lambda: read_file("datafiles/counties/otter-tail", True),
"out.txt": lambda: read_file("datafiles/counties/out.txt", True),
"pennington": lambda: read_file("datafiles/counties/pennington", True),
"pine": lambda: read_file("datafiles/counties/pine", True),
"pipestone": lambda: read_file("datafiles/counties/pipestone", True),
"polk": lambda: read_file("datafiles/counties/polk", True),
"pope": lambda: read_file("datafiles/counties/pope", True),
"ramsey": lambda: read_file("datafiles/counties/ramsey", True),
"red-lake": lambda: read_file("datafiles/counties/red-lake", True),
"redwood": lambda: read_file("datafiles/counties/redwood", True),
"renville": lambda: read_file("datafiles/counties/renville", True),
"rice": lambda: read_file("datafiles/counties/rice", True),
"rock": lambda: read_file("datafiles/counties/rock", True),
"roseau": lambda: read_file("datafiles/counties/roseau", True),
"scott": lambda: read_file("datafiles/counties/scott", True),
"sherburne": lambda: read_file("datafiles/counties/sherburne", True),
"sibley": lambda: read_file("datafiles/counties/sibley", True),
"stearns": lambda: read_file("datafiles/counties/stearns", True),
"steele": lambda: read_file("datafiles/counties/steele", True),
"stevens": lambda: read_file("datafiles/counties/stevens", True),
"st-louis": lambda: read_file("datafiles/counties/st-louis", True),
"swift": lambda: read_file("datafiles/counties/swift", True),
"todd": lambda: read_file("datafiles/counties/todd", True),
"traverse": lambda: read_file("datafiles/counties/traverse", True),
"wabasha": lambda: read_file("datafiles/counties/wabasha", True),
"wadena": lambda: read_file("datafiles/counties/wadena", True),
"waseca": lambda: read_file("datafiles/counties/waseca", True),
"washington": lambda: read_file("datafiles/counties/washington", True),
"watonwan": lambda: read_file("datafiles/counties/watonwan", True),
"wilkin": lambda: read_file("datafiles/counties/wilkin", True),
"winona": lambda: read_file("datafiles/counties/winona", True),
"wright": lambda: read_file("datafiles/counties/wright", True),
"yellow-medicine": lambda: read_file("datafiles/counties/yellow-medicine", True),
